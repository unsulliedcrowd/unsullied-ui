# Courtesy of https://raw.githubusercontent.com/revolunet/create-react-app-circleci/master/.circleci/config.yml

defaults: &defaults
  working_directory: ~/unsullied-ui
  docker:
    - image: node:10

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn install
      - run: yarn run build
      - persist_to_workspace:
          root: .
          paths:
            - build
  tu:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn run test
  e2e:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn run test
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn run lint
  deploy-github:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "81:ef:60:b9:cf:08:3b:b3:32:a8:bd:d5:d8:bd:9c:f2"
      - deploy:
          name: Deploy to GitHub Pages
          command: |
            git config --global -l
            git config --global user.email circleci@circleci
            git config --global user.name CircleCI
            yarn run deploy

workflows:
  version: 2
  build:
    jobs:
      - prepare:
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/
      - lint:
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/
          requires:
            - prepare
      - build:
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/
          requires:
            - lint
      - tu:
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/
          requires:
            - build
      - e2e:
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/
          requires:
            - build
      - deploy-github:
          filters:
              tags:
                only: /^v.*/
              branches:
                only: master
          requires:
            - tu
            - e2e

# version: 2
# jobs:
#   build:
#     branches:
#       ignore:
#         - gh-pages
#     docker:
#       - image: circleci/node:8
#     working_directory: ~/repo
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#           - dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
#           - dependencies-
#       - run:
#           name: Install dependencies
#           command: yarn install
#       - save_cache:
#           paths:
#             - node_modules
#           key: dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
#       - deploy:
#           name: Deploy
#           command: |
#               set -e
#               yarn install
#               CI="" yarn run build

#               remote=$(git config remote.origin.url)

#               siteSource="build"

#               if [ ! -d "build" ]
#               then
#                   echo "Usage: $0 <site source dir>"
#                   exit 1
#               fi

#               mkdir gh-pages-branch
#               cd gh-pages-branch
#               git config --global user.email "$GH_EMAIL" > /dev/null 2>&1
#               git config --global user.name "$GH_NAME" > /dev/null 2>&1
#               git init
#               git remote add --fetch origin "$remote"

#               if git rev-parse --verify origin/gh-pages > /dev/null 2>&1
#               then
#                   git checkout gh-pages
#                   git rm -rf .
#               else
#                   git checkout --orphan gh-pages
#               fi

#               cp -a "../build/." .

#               git add -A
#               git commit --allow-empty -m "Deploy to GitHub pages [ci skip]"
#               git push --force --quiet origin gh-pages > /dev/null 2>&1

#               cd ..
#               rm -rf gh-pages-branch

#               echo "Finished Deployment!"
